name: Deploy

on:
  push:
    tags:
      - "v*"
      
permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: mouse2joy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose

  release:
    runs-on: ${{ matrix.os }}
    strategy:
       matrix:
         include:
           - build: linux
             os: ubuntu-latest
             target: x86_64-unknown-linux-musl
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Get the release version from the tag
      shell: bash
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --release --target ${{ matrix.target }}

    - name: Build archive
      shell: bash
      run: |
        binary_name="${{ env.BINARY_NAME }}"
  
        dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
        mkdir "$dirname"
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
        else
          mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
        fi
  
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a "$dirname.zip" "$dirname"
          echo "ASSET=$dirname.zip" >> $GITHUB_ENV
        else
          tar -czf "$dirname.tar.gz" "$dirname"
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
        fi

    - name: Upload binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.ASSET }}
  
